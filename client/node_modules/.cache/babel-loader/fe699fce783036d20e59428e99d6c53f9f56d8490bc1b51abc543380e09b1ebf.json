{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wshii\\\\Desktop\\\\my-project-0314\\\\client\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { makeRequest } from '../../axios.js';\nimport Post from '../post/Post';\nimport './posts.scss';\nimport { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  // const { isLoading, error, data } = useQuery({\n  //   queryKey: ['posts'],\n  //   queryFn: () =>\n  //     makeRequest.get('/posts').then(res => {\n  //       return res.data;\n  //     }),\n  // });\n  // const { isLoading, error, data } = useQuery(['posts'], () =>\n  //   makeRequest.get('/posts').then(res => res.data)\n  // );\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery('repoData', () => fetch('https://api.github.com/repos/tannerlinsley/react-query').then(res => res.json()));\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: isLoading ? 'loading' : data.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["makeRequest","Post","useQuery","useMutation","useQueryClient","QueryClient","QueryClientProvider","jsxDEV","_jsxDEV","Posts","_s","isLoading","error","data","fetch","then","res","json","console","log","className","children","map","post","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wshii/Desktop/my-project-0314/client/src/components/posts/Posts.jsx"],"sourcesContent":["import { makeRequest } from '../../axios.js';\r\nimport Post from '../post/Post';\r\nimport './posts.scss';\r\nimport {\r\n  useQuery,\r\n  useMutation,\r\n  useQueryClient,\r\n  QueryClient,\r\n  QueryClientProvider,\r\n} from '@tanstack/react-query';\r\n\r\nconst Posts = () => {\r\n  // const { isLoading, error, data } = useQuery({\r\n  //   queryKey: ['posts'],\r\n  //   queryFn: () =>\r\n  //     makeRequest.get('/posts').then(res => {\r\n  //       return res.data;\r\n  //     }),\r\n  // });\r\n  // const { isLoading, error, data } = useQuery(['posts'], () =>\r\n  //   makeRequest.get('/posts').then(res => res.data)\r\n  // );\r\n  const { isLoading, error, data } = useQuery('repoData', () =>\r\n    fetch('https://api.github.com/repos/tannerlinsley/react-query').then(res =>\r\n      res.json()\r\n    )\r\n  );\r\n  console.log(data);\r\n  return (\r\n    <div className=\"posts\">\r\n      {isLoading\r\n        ? 'loading'\r\n        : data.map(post => <Post post={post} key={post.id} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,cAAc;AACrB,SACEC,QAAQ,EACRC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,mBAAmB,QACd,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAAC,UAAU,EAAE,MACtDY,KAAK,CAAC,wDAAwD,CAAC,CAACC,IAAI,CAACC,GAAG,IACtEA,GAAG,CAACC,IAAI,CAAC,CACX,CACF,CAAC;EACDC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACjB,oBACEL,OAAA;IAAKY,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBV,SAAS,GACN,SAAS,GACTE,IAAI,CAACS,GAAG,CAACC,IAAI,iBAAIf,OAAA,CAACP,IAAI;MAACsB,IAAI,EAAEA;IAAK,GAAMA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxBID,KAAK;EAAA,QAW0BP,QAAQ;AAAA;AAAA2B,EAAA,GAXvCpB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}