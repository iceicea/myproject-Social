{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wshii\\\\Desktop\\\\my-project-0314\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport './comments.scss';\nimport { AuthContext } from '../../context/authContext';\nimport { makeRequest } from '../../axios';\nimport { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const [desc, setDesc] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isPending,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['comments'],\n    queryFn: () => makeRequest.get('/comments?postId=' + postId).then(res => {\n      return res.data;\n    })\n  });\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: newComment => {\n      return makeRequest.post('/comments', newComment);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(['comments']);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        onChange: e => setDesc(e.target.value),\n        value: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isPending ? 'Loading' : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)]\n    }, comment.createdAt, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"jtOEAPH9qnGwoVBT2iftMbmMth4=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","AuthContext","makeRequest","useQuery","useMutation","useQueryClient","QueryClient","QueryClientProvider","moment","jsxDEV","_jsxDEV","Comments","postId","_s","desc","setDesc","currentUser","isPending","error","data","queryKey","queryFn","get","then","res","queryClient","mutation","mutationFn","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","onClick","map","comment","name","createdAt","fromNow","_c","$RefreshReg$"],"sources":["C:/Users/wshii/Desktop/my-project-0314/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport './comments.scss';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { makeRequest } from '../../axios';\r\n\r\nimport {\r\n  useQuery,\r\n  useMutation,\r\n  useQueryClient,\r\n  QueryClient,\r\n  QueryClientProvider,\r\n} from '@tanstack/react-query';\r\nimport moment from 'moment';\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState('');\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { isPending, error, data } = useQuery({\r\n    queryKey: ['comments'],\r\n    queryFn: () =>\r\n      makeRequest.get('/comments?postId=' + postId).then(res => {\r\n        return res.data;\r\n      }),\r\n  });\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation({\r\n    mutationFn: newComment => {\r\n      return makeRequest.post('/comments', newComment);\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['comments']);\r\n    },\r\n  });\r\n\r\n  const handleClick = async e => {\r\n    e.preventDefault();\r\n    mutation.mutate({ desc, postId });\r\n    setDesc('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <img src={currentUser.profilePic} alt=\"\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"write a comment\"\r\n          onChange={e => setDesc(e.target.value)}\r\n          value={desc}\r\n        />\r\n        <button onClick={handleClick}>Send</button>\r\n      </div>\r\n      {isPending\r\n        ? 'Loading'\r\n        : data.map(comment => (\r\n            <div className=\"comment\" key={comment.createdAt}>\r\n              <img src={comment.profilePic} alt=\"\" />\r\n              <div className=\"info\">\r\n                <span>{comment.name}</span>\r\n                <p>{comment.desc}</p>\r\n              </div>\r\n              <span className=\"date\">\r\n                {moment(comment.createdAt).fromNow()}\r\n              </span>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}